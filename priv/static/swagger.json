{
  "swagger": "2.0",
  "paths": {
    "/users/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update an existing user",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the user"
          },
          {
            "type": "string",
            "required": false,
            "name": "email",
            "in": "query",
            "description": "The new email address of the user to be updated"
          }
        ],
        "operationId": "ExFooWeb.UserController.update",
        "description": "Update the details of an existing user"
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve a user",
        "responses": {
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the user"
          }
        ],
        "operationId": "ExFooWeb.UserController.show",
        "description": "Retrieve a user registered in the platform"
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "204": {
            "description": "No Content"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the user"
          }
        ],
        "operationId": "ExFooWeb.UserController.delete",
        "description": "Remove a user from the platform"
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a new user",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Email Address of the user to be created"
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "format": "password",
            "description": "Password that will be assigned to the user"
          },
          {
            "type": "string",
            "required": true,
            "name": "password_confirmation",
            "in": "query",
            "format": "password",
            "description": "Check to see if password has been written correctly"
          }
        ],
        "operationId": "ExFooWeb.UserController.create",
        "description": "Register a new user to the platform"
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List all users",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "ExFooWeb.UserController.index",
        "description": "List all users registered in the platform"
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Creates an authentication token",
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "200": {
            "schema": {},
            "headers": {
              "Authorization": {
                "type": "string",
                "description": "Contains the token (JWT) that the API client can use to authenticate in subsequent requests"
              }
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Email address of a registered user"
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "format": "password",
            "description": "The corresponding password of the registered user"
          }
        ],
        "operationId": "ExFooWeb.TokenController.create",
        "description": "Creates an auth token that can be used to authorize subsequent requests"
      }
    }
  },
  "info": {
    "version": "0.1.0",
    "title": "Ex Foo"
  },
  "host": "localhost:4000",
  "definitions": {
    "Users": {
      "type": "array",
      "title": "Users",
      "items": {
        "$ref": "#/definitions/User"
      },
      "description": "A collection of users"
    },
    "User": {
      "type": "object",
      "title": "User",
      "required": [
        "email",
        "id"
      ],
      "properties": {
        "updated_at": {
          "type": "string",
          "format": "ISO-8601",
          "description": "When the user was last modified"
        },
        "inserted_at": {
          "type": "string",
          "format": "ISO-8601",
          "description": "When the user was created"
        },
        "id": {
          "type": "string",
          "description": "ID of the user"
        },
        "email": {
          "type": "string",
          "description": "Email address of the user"
        }
      },
      "example": {
        "updated_at": "2018-01-25T14:00:00Z",
        "inserted_at": "2018-01-25T14:00:00Z",
        "id": "123",
        "email": "test@example.com"
      },
      "description": "A user of the platform"
    },
    "Error": {
      "type": "object",
      "title": "Error",
      "required": [
        "message",
        "code"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The detail of the error raised"
        },
        "code": {
          "type": "string",
          "description": "The status code of the error"
        }
      },
      "description": "Error responses from the API"
    }
  }
}